import telebot
import calendar
import time
import emoji
import requests

from telebot import types
from datetime import datetime, timezone
from dateutil.parser import parse
from requests.adapters import HTTPAdapter

bot = telebot.TeleBot('5966874038:AAEafXea9Sj4v0hBU8Fjd0joqhctG2loW5Y')

timestamp = calendar.timegm(time.gmtime())
photo_url = f"http://oblenergo.cv.ua/shutdowns/GPV.png?ver={timestamp}"

markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
site = types.KeyboardButton('–°–∞–π—Ç –û–±–ª–µ–Ω–µ—Ä–≥–æ üíª')
schedule = types.KeyboardButton('–ê–∫—Ç—É–∞–ª—å–Ω–∏–π –ì—Ä–∞—Ñ—ñ–∫ üìä')
notif = types.KeyboardButton('–°–ø–æ–≤—ñ—â–µ–Ω–Ω—è üîî')
help = types.KeyboardButton('–¢–µ—Ö. –ü—ñ–¥—Ç—Ä–∏–º–∫–∞ üîß')
markup.add(site, schedule, notif, help)

@bot.message_handler(commands=['start'])
def start(message):
    text = f'–ü—Ä–∏–≤—ñ—Ç, <b>{message.from_user.first_name}</b> üëã –ß–∏–º –º–æ–∂—É –±—É—Ç–∏ –∫–æ—Ä–∏—Å–Ω–∏–º?'
    bot.send_message(message.chat.id, text, parse_mode='html', reply_markup=markup)

@bot.message_handler(content_types=['text'])
def send_info(message):
    if message.text=='–°–∞–π—Ç –û–±–ª–µ–Ω–µ—Ä–≥–æ üíª':
        bot.send_message(message.chat.id, 'http://oblenergo.cv.ua/', parse_mode='html')
    elif message.text=='–ê–∫—Ç—É–∞–ª—å–Ω–∏–π –ì—Ä–∞—Ñ—ñ–∫ üìä':
        bot.send_photo(message.chat.id, photo=photo_url)

    markup_answer = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
    yes = types.KeyboardButton('–¢–∞–∫ ‚úÖ')
    no = types.KeyboardButton('–ù—ñ ‚ùå')
    markup_answer.add(yes, no)

    if message.text=='–°–ø–æ–≤—ñ—â–µ–Ω–Ω—è üîî':
        bot.send_message(message.chat.id, '–ß–∏ –±–∞–∂–∞—î—Ç–µ –æ—Ç—Ä–∏–º—É–≤–∞—Ç–∏ —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è —â–æ—Ä–∞–∑—É –∫–æ–ª–∏ –≥—Ä–∞—Ñ—ñ–∫ –æ–Ω–æ–≤–ª—é–≤–∞—Ç–∏–º–µ—Ç—å—Å—è?', parse_mode='html', reply_markup=markup_answer)

    if message.text=='–¢–∞–∫ ‚úÖ':
        bot.send_message(message.chat.id, '–¢–µ–ø–µ—Ä –≤–∏ –±—É–¥–µ—Ç–µ –æ—Ç—Ä–∏–º—É–≤–∞—Ç–∏ —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è —â–æ—Ä–∞–∑—É –∫–æ–ª–∏ –≥—Ä–∞—Ñ—ñ–∫ –æ–Ω–æ–≤–ª—é–≤–∞—Ç–∏–º–µ—Ç—å—Å—è üòâ', parse_mode='html', reply_markup=markup)
        last_photo_date = datetime.now(timezone.utc)
        print('start checking for new image')
        while True:
            try:
                timestamp = calendar.timegm(time.gmtime())
                photo_url1 = f"http://oblenergo.cv.ua/shutdowns/GPV.png?ver={timestamp}"
                print(f'checking {photo_url1}')
                r = requests.get(photo_url1, verify=False, stream=True, timeout=60)
                current_photo_date = parse(r.headers['Last-Modified'])
                print(f'{current_photo_date=}')
                if current_photo_date > last_photo_date:
                    print(f'{last_photo_date=}')
                    # photo changed, so do something like send the new changed photo
                    bot.send_photo(message.chat_id, photo=photo_url1, timeout=60)
                    bot.send_message(message.chat.id, 'üî¥ –ì—Ä–∞—Ñ—ñ–∫ –û–Ω–æ–≤–∏–≤—Å—è!', parse_mode='html')

                    last_photo_date = current_photo_date # update to last sent photo, so we don't send same photo again.
            except Exception:
                print('while error')
            time.sleep(60) # sleep for 1 minutes then check again
    
    if message.text=='–ù—ñ ‚ùå':
        bot.send_message(message.chat.id, '–ì–∞—Ä–∞–∑–¥ üòï', parse_mode='html', reply_markup=markup)   
   
   
    markup_help = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=1)
    issue = types.KeyboardButton('–ó–Ω–∞–π—à–æ–≤/–ª–∞ –ø–æ–º–∏–ª–∫—É üò¨')
    suggest = types.KeyboardButton('–ó–Ω–∞—é —è–∫ –ø–æ–∫—Ä–∞—â–∏—Ç–∏ –±–æ—Ç–∞ üòè')
    nothing = types.KeyboardButton('–ù—ñ—á–æ–≥–æ, –≤–∏–ø–∞–¥–∫–æ–≤–æ –Ω–∞—Ç–∏—Å–Ω—É–≤/–ª–∞ —Å—é–¥–∏ üòÖ')
    markup_help.add(issue, suggest, nothing)

    if message.text=='–¢–µ—Ö. –ü—ñ–¥—Ç—Ä–∏–º–∫–∞ üîß':
        bot.send_message(message.chat.id, '–©–æ —Å—Ç–∞–ª–æ—Å—è? ü§î', parse_mode='html', reply_markup=markup_help)

    if message.text==('–ó–Ω–∞–π—à–æ–≤/–ª–∞ –ø–æ–º–∏–ª–∫—É üò¨'):
        bot.send_message(message.chat.id, '–ó–≤–µ—Ä–Ω—ñ—Ç—å—Å—è, –±—É–¥—å –ª–∞—Å–∫–∞, –¥–æ –º–æ–≥–æ —Ç–≤–æ—Ä—Ü—è - @shineqwen.', parse_mode='html', reply_markup=markup)
    if message.text==('–ó–Ω–∞—é —è–∫ –ø–æ–∫—Ä–∞—â–∏—Ç–∏ –±–æ—Ç–∞ üòè'):
        bot.send_message(message.chat.id, '–ó–≤–µ—Ä–Ω—ñ—Ç—å—Å—è, –±—É–¥—å –ª–∞—Å–∫–∞, –¥–æ –º–æ–≥–æ —Ç–≤–æ—Ä—Ü—è - @shineqwen.', parse_mode='html', reply_markup=markup)
    if message.text==('–ù—ñ—á–æ–≥–æ, –≤–∏–ø–∞–¥–∫–æ–≤–æ –Ω–∞—Ç–∏—Å–Ω—É–≤/–ª–∞ —Å—é–¥–∏ üòÖ'):
        bot.send_message(message.chat.id, '–ì–∞—Ä–∞–∑–¥)', parse_mode='html', reply_markup=markup)

bot.polling(non_stop=True)